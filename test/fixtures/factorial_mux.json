{
  "options": {
    "directed": true,
    "multigraph": true,
    "compound": true
  },
  "nodes": [
    {
      "v": "defco_factorial",
      "value": {
        "id": "factorial",
        "inputPorts": {
          "n": "generic"
        },
        "outputPorts": {
          "fac": "generic"
        },
        "implementation": {
          "nodes": [
            {
              "id": "logic/mux",
              "inputPorts": {
                "input1": "generic",
                "input2": "generic",
                "control": "bool"
              },
              "outputPorts": {
                "output": "generic"
              },
              "atomic": true,
              "version": "0.1.0",
              "path": [
                {
                  "meta": "factorial",
                  "branch": "defco_factorial",
                  "path": []
                }
              ],
              "parent": "defco_factorial",
              "branchPath": "defco_factorial:mux_0",
              "branch": "mux_0",
              "recursive": false
            },
            {
              "id": "math/const",
              "version": "0.2.0",
              "inputPorts": {},
              "outputPorts": {
                "output": "number"
              },
              "atomic": true,
              "path": [
                {
                  "meta": "factorial",
                  "branch": "defco_factorial",
                  "path": []
                }
              ],
              "params": {
                "value": 1
              },
              "parent": "defco_factorial",
              "branchPath": "defco_factorial:const(1)_1",
              "branch": "const(1)_1",
              "recursive": false
            },
            {
              "id": "math/multiply",
              "version": "0.2.0",
              "inputPorts": {
                "m1": "number",
                "m2": "number"
              },
              "outputPorts": {
                "product": "number"
              },
              "atomic": true,
              "path": [
                {
                  "meta": "factorial",
                  "branch": "defco_factorial",
                  "path": []
                }
              ],
              "parent": "defco_factorial",
              "branchPath": "defco_factorial:multiply_2",
              "branch": "multiply_2",
              "recursive": false
            },
            {
              "id": "factorial",
              "inputPorts": {
                "n": "generic"
              },
              "outputPorts": {
                "fac": "generic"
              },
              "implementation": {
                "nodes": [
                  {
                    "meta": "logic/mux",
                    "name": "mux_0"
                  },
                  {
                    "meta": "math/const",
                    "name": "const(1)_1",
                    "params": {
                      "value": 1
                    }
                  },
                  {
                    "meta": "math/multiply",
                    "name": "multiply_2"
                  },
                  {
                    "meta": "factorial",
                    "name": "factorial_3"
                  },
                  {
                    "meta": "math/add",
                    "name": "add_4"
                  },
                  {
                    "meta": "math/const",
                    "name": "const(-1)_5",
                    "params": {
                      "value": -1
                    }
                  },
                  {
                    "meta": "math/less",
                    "name": "less_6"
                  },
                  {
                    "meta": "math/const",
                    "name": "const(1)_7",
                    "params": {
                      "value": 1
                    }
                  }
                ],
                "edges": [
                  {
                    "from": "const(1)_1:output",
                    "to": "mux_0:input1"
                  },
                  {
                    "from": "n",
                    "to": "multiply_2:m1"
                  },
                  {
                    "from": "n",
                    "to": "add_4:s1"
                  },
                  {
                    "from": "const(-1)_5:output",
                    "to": "add_4:s2"
                  },
                  {
                    "from": "add_4:sum",
                    "to": "factorial_3:n"
                  },
                  {
                    "from": "factorial_3:fac",
                    "to": "multiply_2:m2"
                  },
                  {
                    "from": "multiply_2:product",
                    "to": "mux_0:input2"
                  },
                  {
                    "from": "n",
                    "to": "less_6:isLess"
                  },
                  {
                    "from": "const(1)_7:output",
                    "to": "less_6:than"
                  },
                  {
                    "from": "less_6:value",
                    "to": "mux_0:control"
                  },
                  {
                    "from": "mux_0:output",
                    "to": "fac"
                  }
                ]
              },
              "name": "defco_factorial",
              "externalComponent": true,
              "parent": "defco_factorial",
              "branchPath": "defco_factorial:factorial_3",
              "branch": "factorial_3",
              "recursesTo": {
                "meta": "factorial",
                "branch": "defco_factorial",
                "path": []
              },
              "recursive": true
            },
            {
              "id": "math/add",
              "version": "0.2.0",
              "inputPorts": {
                "s1": "number",
                "s2": "number"
              },
              "outputPorts": {
                "sum": "number"
              },
              "atomic": true,
              "path": [
                {
                  "meta": "factorial",
                  "branch": "defco_factorial",
                  "path": []
                }
              ],
              "parent": "defco_factorial",
              "branchPath": "defco_factorial:add_4",
              "branch": "add_4",
              "recursive": false
            },
            {
              "id": "math/const",
              "version": "0.2.0",
              "inputPorts": {},
              "outputPorts": {
                "output": "number"
              },
              "atomic": true,
              "path": [
                {
                  "meta": "factorial",
                  "branch": "defco_factorial",
                  "path": []
                }
              ],
              "params": {
                "value": -1
              },
              "parent": "defco_factorial",
              "branchPath": "defco_factorial:const(-1)_5",
              "branch": "const(-1)_5",
              "recursive": false
            },
            {
              "id": "math/less",
              "version": "0.1.1",
              "inputPorts": {
                "isLess": "number",
                "than": "number"
              },
              "outputPorts": {
                "value": "bool"
              },
              "atomic": true,
              "path": [
                {
                  "meta": "factorial",
                  "branch": "defco_factorial",
                  "path": []
                }
              ],
              "parent": "defco_factorial",
              "branchPath": "defco_factorial:less_6",
              "branch": "less_6",
              "recursive": false
            },
            {
              "id": "math/const",
              "version": "0.2.0",
              "inputPorts": {},
              "outputPorts": {
                "output": "number"
              },
              "atomic": true,
              "path": [
                {
                  "meta": "factorial",
                  "branch": "defco_factorial",
                  "path": []
                }
              ],
              "params": {
                "value": 1
              },
              "parent": "defco_factorial",
              "branchPath": "defco_factorial:const(1)_7",
              "branch": "const(1)_7",
              "recursive": false
            }
          ],
          "edges": [
            {
              "from": "const(1)_1:output",
              "to": "mux_0:input1"
            },
            {
              "from": "n",
              "to": "multiply_2:m1"
            },
            {
              "from": "n",
              "to": "add_4:s1"
            },
            {
              "from": "const(-1)_5:output",
              "to": "add_4:s2"
            },
            {
              "from": "add_4:sum",
              "to": "factorial_3:n"
            },
            {
              "from": "factorial_3:fac",
              "to": "multiply_2:m2"
            },
            {
              "from": "multiply_2:product",
              "to": "mux_0:input2"
            },
            {
              "from": "n",
              "to": "less_6:isLess"
            },
            {
              "from": "const(1)_7:output",
              "to": "less_6:than"
            },
            {
              "from": "less_6:value",
              "to": "mux_0:control"
            },
            {
              "from": "mux_0:output",
              "to": "fac"
            }
          ]
        },
        "name": "defco_factorial",
        "externalComponent": true,
        "path": [],
        "branchPath": "defco_factorial",
        "branch": "defco_factorial",
        "recursive": false,
        "typeHint": {}
      }
    },
    {
      "v": "defco_factorial:mux_0",
      "value": {
        "id": "logic/mux",
        "inputPorts": {
          "input1": "generic",
          "input2": "generic",
          "control": "bool"
        },
        "outputPorts": {
          "output": "generic"
        },
        "atomic": true,
        "version": "0.1.0",
        "path": [
          {
            "meta": "factorial",
            "branch": "defco_factorial",
            "path": []
          }
        ],
        "parent": "defco_factorial",
        "branchPath": "defco_factorial:mux_0",
        "branch": "mux_0",
        "recursive": false,
        "settings": {
          "continuations": [
            "defco_factorial:factorial_3"
          ]
        },
        "typeHint": {}
      },
      "parent": "defco_factorial"
    },
    {
      "v": "defco_factorial:const(1)_1",
      "value": {
        "id": "math/const",
        "version": "0.2.0",
        "inputPorts": {},
        "outputPorts": {
          "output": "int64"
        },
        "atomic": true,
        "path": [
          {
            "meta": "factorial",
            "branch": "defco_factorial",
            "path": []
          }
        ],
        "params": {
          "value": 1
        },
        "parent": "defco_factorial",
        "branchPath": "defco_factorial:const(1)_1",
        "branch": "const(1)_1",
        "recursive": false,
        "typeHint": {}
      },
      "parent": "defco_factorial"
    },
    {
      "v": "defco_factorial:multiply_2",
      "value": {
        "id": "math/multiply",
        "version": "0.2.0",
        "inputPorts": {
          "m1": "int64",
          "m2": "int64"
        },
        "outputPorts": {
          "product": "int64"
        },
        "atomic": true,
        "path": [
          {
            "meta": "factorial",
            "branch": "defco_factorial",
            "path": []
          }
        ],
        "parent": "defco_factorial",
        "branchPath": "defco_factorial:multiply_2",
        "branch": "multiply_2",
        "recursive": false,
        "typeHint": {}
      },
      "parent": "defco_factorial"
    },
    {
      "v": "defco_factorial:factorial_3",
      "value": {
        "id": "factorial",
        "inputPorts": {
          "n": "generic"
        },
        "outputPorts": {
          "fac": "generic"
        },
        "implementation": {
          "nodes": [
            {
              "meta": "logic/mux",
              "name": "mux_0"
            },
            {
              "meta": "math/const",
              "name": "const(1)_1",
              "params": {
                "value": 1
              }
            },
            {
              "meta": "math/multiply",
              "name": "multiply_2"
            },
            {
              "meta": "factorial",
              "name": "factorial_3"
            },
            {
              "meta": "math/add",
              "name": "add_4"
            },
            {
              "meta": "math/const",
              "name": "const(-1)_5",
              "params": {
                "value": -1
              }
            },
            {
              "meta": "math/less",
              "name": "less_6"
            },
            {
              "meta": "math/const",
              "name": "const(1)_7",
              "params": {
                "value": 1
              }
            }
          ],
          "edges": [
            {
              "from": "const(1)_1:output",
              "to": "mux_0:input1"
            },
            {
              "from": "n",
              "to": "multiply_2:m1"
            },
            {
              "from": "n",
              "to": "add_4:s1"
            },
            {
              "from": "const(-1)_5:output",
              "to": "add_4:s2"
            },
            {
              "from": "add_4:sum",
              "to": "factorial_3:n"
            },
            {
              "from": "factorial_3:fac",
              "to": "multiply_2:m2"
            },
            {
              "from": "multiply_2:product",
              "to": "mux_0:input2"
            },
            {
              "from": "n",
              "to": "less_6:isLess"
            },
            {
              "from": "const(1)_7:output",
              "to": "less_6:than"
            },
            {
              "from": "less_6:value",
              "to": "mux_0:control"
            },
            {
              "from": "mux_0:output",
              "to": "fac"
            }
          ]
        },
        "name": "defco_factorial",
        "externalComponent": true,
        "parent": "defco_factorial",
        "branchPath": "defco_factorial:factorial_3",
        "branch": "factorial_3",
        "recursesTo": {
          "meta": "factorial",
          "branch": "defco_factorial",
          "path": []
        },
        "recursive": true,
        "settings": {
          "isContinuation": true
        },
        "typeHint": {}
      },
      "parent": "defco_factorial"
    },
    {
      "v": "defco_factorial:add_4",
      "value": {
        "id": "math/add",
        "version": "0.2.0",
        "inputPorts": {
          "s1": "int64",
          "s2": "int64"
        },
        "outputPorts": {
          "sum": "int64"
        },
        "atomic": true,
        "path": [
          {
            "meta": "factorial",
            "branch": "defco_factorial",
            "path": []
          }
        ],
        "parent": "defco_factorial",
        "branchPath": "defco_factorial:add_4",
        "branch": "add_4",
        "recursive": false,
        "typeHint": {}
      },
      "parent": "defco_factorial"
    },
    {
      "v": "defco_factorial:const(-1)_5",
      "value": {
        "id": "math/const",
        "version": "0.2.0",
        "inputPorts": {},
        "outputPorts": {
          "output": "int64"
        },
        "atomic": true,
        "path": [
          {
            "meta": "factorial",
            "branch": "defco_factorial",
            "path": []
          }
        ],
        "params": {
          "value": -1
        },
        "parent": "defco_factorial",
        "branchPath": "defco_factorial:const(-1)_5",
        "branch": "const(-1)_5",
        "recursive": false,
        "typeHint": {}
      },
      "parent": "defco_factorial"
    },
    {
      "v": "defco_factorial:less_6",
      "value": {
        "id": "math/less",
        "version": "0.1.1",
        "inputPorts": {
          "isLess": "int64",
          "than": "int64"
        },
        "outputPorts": {
          "value": "bool"
        },
        "atomic": true,
        "path": [
          {
            "meta": "factorial",
            "branch": "defco_factorial",
            "path": []
          }
        ],
        "parent": "defco_factorial",
        "branchPath": "defco_factorial:less_6",
        "branch": "less_6",
        "recursive": false,
        "typeHint": {}
      },
      "parent": "defco_factorial"
    },
    {
      "v": "defco_factorial:const(1)_7",
      "value": {
        "id": "math/const",
        "version": "0.2.0",
        "inputPorts": {},
        "outputPorts": {
          "output": "int64"
        },
        "atomic": true,
        "path": [
          {
            "meta": "factorial",
            "branch": "defco_factorial",
            "path": []
          }
        ],
        "params": {
          "value": 1
        },
        "parent": "defco_factorial",
        "branchPath": "defco_factorial:const(1)_7",
        "branch": "const(1)_7",
        "recursive": false,
        "typeHint": {}
      },
      "parent": "defco_factorial"
    },
    {
      "v": "defco_factorial_n_DUPLICATE_0_2",
      "value": {
        "id": "control/duplicate",
        "version": "0.2.0",
        "inputPorts": {
          "in": "generic"
        },
        "outputPorts": {
          "d1": "generic",
          "d2": "generic"
        },
        "atomic": true,
        "typeHint": {}
      },
      "parent": "defco_factorial"
    },
    {
      "v": "defco_factorial_n_DUPLICATE_0_2_d1_DUPLICATE_0_1",
      "value": {
        "id": "control/duplicate",
        "version": "0.2.0",
        "inputPorts": {
          "in": "generic"
        },
        "outputPorts": {
          "d1": "generic",
          "d2": "generic"
        },
        "atomic": true,
        "typeHint": {}
      },
      "parent": "defco_factorial"
    }
  ],
  "edges": [
    {
      "v": "defco_factorial:const(1)_1",
      "w": "defco_factorial:mux_0",
      "name": "defco_factorial:const(1)_1:output→defco_factorial:mux_0:input1",
      "value": {
        "outPort": "output",
        "inPort": "input1"
      }
    },
    {
      "v": "defco_factorial:const(-1)_5",
      "w": "defco_factorial:add_4",
      "name": "defco_factorial:const(-1)_5:output→defco_factorial:add_4:s2",
      "value": {
        "outPort": "output",
        "inPort": "s2"
      }
    },
    {
      "v": "defco_factorial:add_4",
      "w": "defco_factorial:factorial_3",
      "name": "defco_factorial:add_4:sum→defco_factorial:factorial_3:n",
      "value": {
        "outPort": "sum",
        "inPort": "n"
      }
    },
    {
      "v": "defco_factorial:factorial_3",
      "w": "defco_factorial:multiply_2",
      "name": "defco_factorial:factorial_3:fac→defco_factorial:multiply_2:m2",
      "value": {
        "outPort": "fac",
        "inPort": "m2"
      }
    },
    {
      "v": "defco_factorial:multiply_2",
      "w": "defco_factorial:mux_0",
      "name": "defco_factorial:multiply_2:product→defco_factorial:mux_0:input2",
      "value": {
        "outPort": "product",
        "inPort": "input2"
      }
    },
    {
      "v": "defco_factorial:const(1)_7",
      "w": "defco_factorial:less_6",
      "name": "defco_factorial:const(1)_7:output→defco_factorial:less_6:than",
      "value": {
        "outPort": "output",
        "inPort": "than"
      }
    },
    {
      "v": "defco_factorial:less_6",
      "w": "defco_factorial:mux_0",
      "name": "defco_factorial:less_6:value→defco_factorial:mux_0:control",
      "value": {
        "outPort": "value",
        "inPort": "control"
      }
    },
    {
      "v": "defco_factorial:mux_0",
      "w": "defco_factorial",
      "name": "defco_factorial:mux_0:output→defco_factorial:fac",
      "value": {
        "outPort": "output",
        "inPort": "fac"
      }
    },
    {
      "v": "defco_factorial:mux_0",
      "w": "defco_factorial:factorial_3",
      "name": "defco_factorial:mux_0→→defco_factorial:factorial_3",
      "value": {
        "continuation": true
      }
    },
    {
      "v": "defco_factorial_n_DUPLICATE_0_2_d1_DUPLICATE_0_1",
      "w": "defco_factorial:multiply_2",
      "value": {
        "outPort": "d1",
        "inPort": "m1"
      }
    },
    {
      "v": "defco_factorial_n_DUPLICATE_0_2_d1_DUPLICATE_0_1",
      "w": "defco_factorial:add_4",
      "value": {
        "outPort": "d2",
        "inPort": "s1"
      }
    },
    {
      "v": "defco_factorial_n_DUPLICATE_0_2",
      "w": "defco_factorial_n_DUPLICATE_0_2_d1_DUPLICATE_0_1",
      "value": {
        "outPort": "d1",
        "inPort": "in"
      }
    },
    {
      "v": "defco_factorial_n_DUPLICATE_0_2",
      "w": "defco_factorial:less_6",
      "value": {
        "outPort": "d2",
        "inPort": "isLess"
      }
    },
    {
      "v": "defco_factorial",
      "w": "defco_factorial_n_DUPLICATE_0_2",
      "value": {
        "outPort": "n",
        "inPort": "in"
      }
    }
  ]
}
